// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


model Account {
  id                 String  @id @default(auto()) @map("_id") @db.ObjectId
  coachId            String? @db.ObjectId @map("coach_id")  // Nullable coach foreign key
  studentId          String? @db.ObjectId @map("student_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String? 
  access_token       String? 
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? 
  session_state      String?
 
  coach   Coach?   @relation(fields: [coachId], references: [id], onDelete: Cascade) // Nullable relation to Coach
  student Student? @relation(fields: [studentId], references: [id], onDelete: Cascade) // Nullable relation to Student
 
  @@unique([provider, providerAccountId])
  @@map("accounts")
}
model Coach {
  id            String           @id @default(auto()) @map("_id") @db.ObjectId
  username      String?          @unique
  email         String?          @unique
  emailVerified DateTime?        @map("email_verified")
  image         String?
  password      String?
  clients       Student[]        @relation("CoachClients")
  subscription  SubscriptionTier @default(FREE)
  accounts      Account[]
}

model Student {
  id            String           @id @default(auto()) @map("_id") @db.ObjectId
  username      String?          @unique
  email         String?          @unique
  emailVerified DateTime?        @map("email_verified")
  image         String?
  password      String?
  coach         Coach?           @relation("CoachClients", fields: [coachId], references: [id])
  coachId       String?          @db.ObjectId
  iRacingID     String
  accounts      Account[]
}

// Enum for role differentiation

enum SubscriptionTier {
  FREE
  BASIC
  PRO
}